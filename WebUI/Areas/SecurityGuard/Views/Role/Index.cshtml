@model SecurityGuard.ViewModels.ManageRolesViewModel
@{
    ViewBag.Title = "Index";
    //Layout = "~/Areas/SecurityGuard/Views/Shared/_SecurityGuardLayoutPage.cshtml";
}
    @*<script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.jqia.selects.js")" type="text/javascript"></script>*@    

<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewBag.Title</h2>
        <div id="breadcrumb">
            @Html.ActionLink("Dashboard", "Index", "Dashboard") > Manage Roles
        </div>
    </div>
</div>

<div class="wrapper wrapper-content">
    <div class="ibox">
        <div class="ibox-title">
            <h4>Manage Roles</h4>
        </div>
        <div class="ibox-content">
            <ul class="system_messages" style="display: none;"></ul>


            <div class="form-horizontal">
                <div class="form-group">
                    <label class="col-xs-2 control-label">Role Name</label>
                    <div class="col-xs-4">
                        @Html.TextBox("RoleName", "", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-xs-offset-2 col-xs-10">
                        <button id="add-role" class="btn btn-primary">Add</button>
                    </div>
                </div>
                <hr />

                <div class="form-group">
                    <label class="col-xs-2 control-label">Roles</label>
                    <div class="col-xs-4">
                        @Html.ListBox("Roles", Model.Roles, new { @class = "form-control", style = "height:200px;" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-xs-offset-2 col-xs-5">
                        <div class="checkbox">
                            @Html.CheckBox("throwOnPopulatedRole")&nbsp;Delete role if it has users? <em class="small">(Recommended: un-checked)</em>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-xs-offset-2 col-xs-10">
                        <button id="edit-role" class="btn btn-primary">Edit</button>&nbsp;
                        <button id="delete-roles" class="btn btn-default">Delete</button>&nbsp;
                        @Html.ActionLink("Add Module", "AddModule", "Role", new { area = "SecurityGuard" }, new { id = "add-module" })
                    </div>
                </div>
            </div><br>
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="col-xs-2 control-label">Get Users in Role</label>
                    <div class="col-xs-4">
                        @Html.DropDownList("RolesList", Model.Roles, "[Select Role]", new { @class = "form-control" })
                    </div>
                </div>
                <div id="users-in-role-div" class="form-group" style="display: none;">
                    <div class="col-xs-offset-2 col-xs-4">
                        Users in Role
                        <ul></ul>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="edit-dialog">
                <div class="modal-dialog modal-sm">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                            <h6 class="modal-title">Edit Role</h6>
                        </div>
                        <div class="modal-body">
                            <input type="hidden" id="role-id" />
                            <div class="form-group">
                                <label for="role-edit">Role Name:</label>
                                <input type="text" class="form-control" id="role-edit">
                            </div>
                            <div class="form-group">
                                <span></span>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-success" id="save-role">Save</button>
                        </div>
                    </div><!-- /.modal-content -->
                </div><!-- /.modal-dialog -->
            </div><!-- /.modal -->

        </div>
    </div>
</div>

@section scripts{
    <script src="@Url.Content("~/Content/SecurityGuard/scripts/jquery.jqia.selects.js")" type="text/javascript"></script>
    <script type="text/javascript">

    $(function () {
        var message = $(".system_messages");
        //$('#Roles').removeAttr('multiple');
        var anchor = $("a#add-module");

        anchor.attr('href', 'javascript: void(0)');

        $("#Roles").change(function () {
            var count = $(this).find('option:selected').length;

            // Get a reference to the "href" of the link.
            //var href = anchor.attr("href");
            var href = '@Url.Action("AddModule", "Role", new {area = "SecurityGuard"})';

            // Concatenate the existing href value with the username
            var newHref = href + "?roleName=" + $(this).val();

            // Replace the existing href value with the new one
            if (count == 0 || count > 1) {
                anchor.attr('href', 'javascript: void(0)');
            } else {
                anchor.attr("href", newHref);
            }


        });

        function onSelect(e) {

        }

        /***********************************************
        * Begin Add Role Functions
        ***********************************************/
        $("#add-role").click(function () {
            var roleName = $("#RoleName").val();

            if (roleName == "") {
                ShowMessage("Please enter a role name.");
                return;
            }

            $.ajax({
                url: '@Url.Action("CreateRole", "Role")',
                dataType: 'json',
                type: 'POST',
                cache: false,
                data: { roleName: roleName },
                success: OnCreateRoleSuccess,
                error: OnCreateRoleError
            });
        });

        function OnCreateRoleSuccess(data) {
            $("li", message).remove();
            if (data.Success) {
                $("#RoleName").val("");

                GetAllRoles("Roles");
                GetListRoles("RolesList");
            } else {
                $("#RoleName").val("");
            }

            DisplayMessage(data);
            message.show().delay(5000).fadeOut();
        }

        function OnCreateRoleError(xhr, status, error) {
            message.show().delay(5000).fadeOut();    // Show the message
            $("li", message).addClass("red");      // Apply the Green style
            $("strong", message).text(error); // Insert the message
        }

        $("#RoleName").keyup(function () {
            var text = $(this).val();
            if (text != "") {
                $("strong", message).text("");
            }
        });


        /***********************************************
        * End Add Role Functions
        ***********************************************/


        /***********************************************
        * Begin Edit Role Functions
        ***********************************************/

        $("#edit-role").click(function () {
            var role = $("#Roles").find("option:selected");

            if (role.length == 0) {
                ShowMessage("Please select at least one role to edit.");                
                return;
            }

            if (role.length > 1) {
                ShowMessage("You can not select more than one role to edit.");              
                return;
            }

            $.post('@Url.Action("RoleId")', { roleName: role.text() }, function (data) {
                //console.log(data);
                $('#role-id').val(data);
                $('#role-edit').val(role.text());
                $('#edit-dialog').modal('show');                
            });
        });

        $("#save-role").click(function () {
            var roleId = $('#role-id').val();
            var roleName = $('#role-edit').val();
            var tempRoleName = $("#Roles").find("option:selected").text();

            if (roleName == "") {
                ShowEditMessage("Please enter a role name.");
                return;
            }

            $.ajax({
                url: '@Url.Action("EditRole")',
                dataType: 'json',
                type: 'POST',
                cache: false,
                data: { roleId: roleId, roleName: roleName, tempRoleName: tempRoleName },
                success: OnEditRoleSuccess,
                error: OnEditRoleError
            });
        });

        function OnEditRoleSuccess(data) {
            if (data.Success) {
                $('#edit-dialog').modal('hide');

                GetAllRoles('Roles');
                GetListRoles('RolesList');

                anchor.attr('href', 'javascript: void(0)');
            } else {
                ShowEditMessage(data.Message);
            }
        }

        function OnEditRoleError(xhr, status, error) {
            ShowEditMessage(error);
        }

        function ShowEditMessage(message) {
            var status = $('#edit-dialog').find('span');

            status.addClass("text-danger");
            status.html(message);
            status.show();

            setTimeout(function () {
                status.hide().empty();
            }, 3000);
        }
        /***********************************************
        * End Edit Role Functions
        ***********************************************/


        /***********************************************
        * Begin Delete Role Functions
        ***********************************************/

        $("#delete-roles").click(function () {
            var rolesList = $("#Roles");

            if (rolesList.val() == null) {
                ShowMessage("Please select at least one role to delete.");
                return;
            }

            if (!confirm("Are you sure you want to delete these Roles?  This cannot be undone!")) {
                return;
            }

            var chkBox = $("#throwOnPopulatedRole");
            var throwOnPopRole = !chkBox.is(":checked");

            var roles = "";

            $.each(rolesList.val(), function (index, data) {
                if (data != undefined) {
                    roles += data + ",";
                }
            });

            $.ajax({
                url: '@Url.Action("DeleteRoles", "Role")',
                dataType: 'json',
                type: 'POST',
                cache: false,
                data: { roles: roles, throwOnPopulatedRole: throwOnPopRole },
                success: OnDeleteRoleSuccess,
                error: OnDeleteRoleError
            });
        });

        function OnDeleteRoleSuccess(data) {
            if (data.Success) {
                $("li", message).remove();  // remove all li from the system_messages ul element.
                $.each(data.Messages, function (index, item) {
                    if (item.Success) {
                        // Refresh Roles lists
                        GetAllRoles("Roles");
                        GetListRoles("RolesList");
                    }

                    // Show the message
                    DisplayMessage(item);
                });
                message.show().delay(5000).fadeOut();
            }
        }

        function OnDeleteRoleError(xhr, status, error) {
            DisplayError(error);
            message.show().delay(5000).fadeOut();
        }

        /***********************************************
        * End Delete Role Functions
        ***********************************************/








        /***********************************************
        * Begin Get Users In Role Functions
        ***********************************************/

        //users-in-role-div

        var usersInRoleDiv = $("#users-in-role-div");
        var ul = $("#users-in-role-div ul");

        $("#RolesList").change(function () {
            var item = $(this).val();

            if (item != "") {
                usersInRoleDiv.show();

                $.ajax({
                    url: '@Url.Action("GetUsersInRole", "Role")',
                    dataType: 'json',
                    type: 'GET',
                    cache: false,
                    data: { roleName: item },
                    success: OnGetUsersInRoleSuccess,
                    error: OnGetUsersInRoleError
                });
            } else {
                $("#users-in-role-div").hide();
            }
        });

        function OnGetUsersInRoleSuccess(data) {
            ul.empty();
            if (data == "") {
                ul.append("<li>No user(s).</li>");
            } else {
                $.each(data, function (index, item) {
                    var url = '@Url.Action("Update", "Membership")';
                    ul.append('<li><a href="' + url + '?userName=' + item + '\">' + item + '</a></li>');
                });
            }
        }

        function OnGetUsersInRoleError(xhr, status, error) {
            message.show().delay(5000).fadeOut();    // Show the message
            $("li", message).addClass("red");      // Apply the Green style
            $("strong", message).text(error); // Insert the message
        }

        /***********************************************
        * End Get Users In Role Functions
        ***********************************************/










        /***********************************************
        * Begin Common Role Functions
        ***********************************************/

        function GetAllRoles(selectObject) {
            $.ajax({
                url: '@Url.Action("GetAllRoles", "Role")',
                dataType: 'json',
                type: 'GET',
                cache: false,
                success: function (data) {
                    var rolesList = $("#" + selectObject);
                    //rolesList.loadSelect(data);
                    rolesList.empty();
                    for (var i = 0; i < data.length; i++)
                    {
                        rolesList.append('<option value="'+ data[i].value +'">' + data[i].caption + '</option>')
                    }
                    console.log(data);
                },
                error: function (data) {                    
                    console.log(data);
                },               
            });
            console.log(selectObject)
        }

        function GetListRoles(selectObject) {
            $.ajax({
                url: '@Url.Action("GetListRoles", "Role")',
                dataType: 'json',
                type: 'GET',
                cache: false,
                success: function (data) {
                    var rolesList = $("#" + selectObject);
                    //rolesList.loadSelect(data);
                    rolesList.empty();
                    for (var i = 0; i < data.length; i++) {
                        rolesList.append('<option value="' + data[i].value + '">' + data[i].caption + '</option>')
                    }
                }
            });
        }


        //<ul class="system_messages" style="display: none;">
        //    <li><span class="ico"></span><strong class="system_title"></strong></li>
        //</ul>

        function DisplayError(error) {
            var li = $("<li></li>").addClass("red");
            var span = $("<span></span>").addClass("ico").appendTo(li);
            var strong = $("<strong></strong>").addClass("system_title").html(error).appendTo(li);

            li.appendTo(message);
        }

        function DisplayMessage(data) {
            var li = $("<li></li>").addClass(data.CssClass);
            var span = $("<span></span>").addClass("ico").appendTo(li);
            var strong = $("<strong></strong>").addClass("system_title").html(data.Message).appendTo(li);

            li.appendTo(message);
        }

        function ShowMessage(msg) {
            $("li", message).remove();
            var li = $("<li></li>").addClass("yellow");
            var span = $("<span></span>").addClass("ico").appendTo(li);
            var strong = $("<strong></strong>").addClass("system_title").html(msg).appendTo(li);

            li.appendTo(message);
            message.show().delay(5000).fadeOut();
        }

        /***********************************************
        * End Common Role Functions
        ***********************************************/


    });



    </script>
}