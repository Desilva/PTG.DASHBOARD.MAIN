@model WebUI.Areas.Risk.Models.Risk.RiskFormStub
@using WebUI.Areas.Risk.Models.RiskImpact;
@using WebUI.Areas.Risk.Models.RiskMitigation;
@using Common.Enums;
@using WebUI.Areas.Risk.Models.Risk;
@using WebUI.Controllers;
@{
    ViewBag.Title = "Risiko";
    string currentController = (string)ViewContext.RouteData.Values["controller"];
    string currentAction = (string)ViewContext.RouteData.Values["action"];
    //string linkUbahRisk = "EditRisk";
    Common.Enums.EnumHelper eh = new Common.Enums.EnumHelper();
    FileNameProcessController fn = new FileNameProcessController();

    string qqRisk = "-";
    string riskClas = "-";

    qqRisk = eh.GetEnumDescription((Common.Enums.Measurement)Enum.Parse(typeof(Common.Enums.Measurement), Model.QualitatifQuantitatifRisk));
    riskClas = eh.GetEnumDescription((Common.Enums.RiskClasification)Enum.Parse(typeof(Common.Enums.RiskClasification), Model.RiskClasification));

    List<RiskImpactFormStub> riskImpacts = (List<RiskImpactFormStub>) (ViewBag.riskImpacts ?? new List<RiskImpactFormStub>());
    List<RiskMitigationFormStub> riskMitigations = (List<RiskMitigationFormStub>) (ViewBag.riskMitigations ?? new List<RiskMitigationFormStub>());
}

<div class="wrapper wrapper-content">
    <div class="ibox ">
        <div class="ibox-title">
            <h5>Rincian</h5>
        </div>
        <div class="ibox-content">
            <div class="form-group">
                @Html.LabelFor(model => model.QualitatifQuantitatifRisk) &nbsp;
                <p>@qqRisk</p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RiskNumber) &nbsp;
                <p>@Model.RiskNumber</p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProcessBusiness) &nbsp;
                <p>@Model.ProcessBusiness</p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RiskCategory) &nbsp;
                <p>@Model.RiskCategory</p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RiskEvent) &nbsp;
                <p>@Html.Raw(Model.RiskEvent)</p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RiskAgent) &nbsp;
                <p>@Html.Raw(Model.RiskAgent)</p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.KRI) &nbsp;
                <p>@Model.KRI</p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Controll) &nbsp;
                <p>@Html.Raw(Model.Controll)</p>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.QualitatifImpact) &nbsp;
                <p>@Html.Raw(Model.QualitatifImpact)</p>
            </div>

            <a href="@Url.Action("EditRisk", currentController, new { Area = "Risk", id = Model.RiskId })" class="btn btn-primary">Ubah</a>

        </div>
    </div>
    <div class="ibox ">
        <div class="ibox-title">
            <h5>Dampak</h5>
        </div>
        <div class="ibox-content">
            @if (riskImpacts.Count() > 0)
            {
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th></th>
                                <th>@Html.LabelFor(model => model.RiskImpacts.FirstOrDefault().QuantitatifImpact)</th>
                                <th>@Html.LabelFor(model => model.RiskImpacts.FirstOrDefault().Probability)</th>
                                <th>@Html.LabelFor(model => model.RiskImpacts.FirstOrDefault().Impact)</th>
                                <th>@Html.LabelFor(model => model.RiskImpacts.FirstOrDefault().RPN)</th>
                            </tr>
                        </thead>
                        @for (int i = 0; i < riskImpacts.Count(); i++)
                        {
                            <tr>
                                <td>@eh.GetEnumDescription((Common.Enums.ImpactTypes)Enum.Parse(typeof(Common.Enums.ImpactTypes), riskImpacts.ElementAt(i).Type))</td>
                                <td>
                                    @riskImpacts.ElementAt(i).QuantitatifImpact
                                </td>
                                <td>
                                    @riskImpacts.ElementAt(i).Probability
                                </td>
                                <td>
                                    @riskImpacts.ElementAt(i).Impact
                                </td>
                                <td>
                                    @riskImpacts.ElementAt(i).RPN
                                </td>
                            </tr>
                        }
                    </table>
                <p>
                    <a href="@Url.Action("EditRiskImpact", currentController, new { Area = "Risk", riskId = Model.RiskId})" class="btn btn-primary">Ubah Dampak</a>
                </p>
            }
            else
            {
                <p>
                    <div id="grid-nkk" data-role="grid" class="label label-warning" style="">Data belum ada</div>
                </p>
                <p>
                    <a href="@Url.Action("AddRiskImpact", currentController, new { Area = "Risk", riskId = Model.RiskId})" class="btn btn-primary">Tambah Dampak</a>
                </p>
            }
        </div>
    </div>

    <div class="ibox ">
        <div class="ibox-title">
            <h5>Mitigasi</h5>
        </div>
        <div class="ibox-content">
            <p>
                <a href="@Url.Action("AddRiskMitigation", currentController, new { Area = "Risk", riskId = Model.RiskId })" class="btn btn-primary">Tambah Mitigasi</a>
            </p>
            @if (riskMitigations.Count() > 0)
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Rencana Mitigasi</th>
                            <th>Rencana Pelaksanaan Risk Treatment</th>
                            <th>Actual Pelaksanaan Risk Treatment</th>
                            <th>Evidence</th>
                            <th>Keterangan</th>
                            <th class="col-xs-1"></th>
                        </tr>
                    </thead>
                    @foreach (RiskMitigationFormStub riskMitigation in riskMitigations)
                    {
                        <tr>
                            <td>@Html.Raw(riskMitigation.MitigationPlan)</td>
                            <td>@eh.GetEnumDescription((Common.Enums.MONTH) Enum.Parse(typeof(Common.Enums.MONTH), riskMitigation.Plan.ToString()))</td>
                            <td>@eh.GetEnumDescription((Common.Enums.MONTH)Enum.Parse(typeof(Common.Enums.MONTH), riskMitigation.Actual.ToString()))</td>
                            <td><a href="@fn.AbsolutePath(riskMitigation.Evidence ?? "")">@fn.FriendlyName(riskMitigation.Evidence ?? "")</a></td>
                            <td>@Html.Raw(riskMitigation.notes)</td>
                            <td><a href="@Url.Action("EditRiskMitigation", currentController, new { Area = "Risk", id = riskMitigation.MitigationId })"><i class="fa fa-edit" aria-hidden="true"></i></a><a href="#" onclick="delete_mitigation(@riskMitigation.MitigationId); return false;"> <i class="fa fa-trash" aria-hidden="true"></i></a></td>
                        </tr>
                    }
                </table>
            }
            else
            {
                <div id="grid-nkk" data-role="grid" class="label label-warning" style="">Data belum ada</div>
            }
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        function delete_mitigation(mitigationId)
        {
            var url = "@Url.Action("DeleteRiskMitigation", currentController, new { Area = "Risk" })";
            var data = { id: mitigationId };
            var url_redirect = "@Url.Action("RiskDetail", currentController, new { Area = "Risk", riskId = Model.RiskId })";
            deleteThenRedirect(url, data, url_redirect);
        }
    </script>
}