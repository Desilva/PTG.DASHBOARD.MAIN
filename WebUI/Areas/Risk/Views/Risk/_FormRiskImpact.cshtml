@model List<WebUI.Areas.Risk.Models.RiskImpact.RiskImpactFormStub>
@{
    string currentController = (string)ViewContext.RouteData.Values["controller"];
    string currentAction = (string)ViewContext.RouteData.Values["action"];
    Common.Enums.EnumHelper eh = new Common.Enums.EnumHelper();

    int count = Model.Count();
}

@using (@Html.BeginForm(currentAction, currentController, FormMethod.Post, new { @id = "formRiskImpactAdd", @class = "form-horizontal" }))
{
    for (int i = 0; i < count; i++)
    {
        @Html.HiddenFor(model => model.ElementAt(i).ImpactId, new { Name = "[" + i + "].ImpactId" });
        @Html.HiddenFor(model => model.ElementAt(i).RiskId, new { Name = "[" + i + "].RiskId" });
        @Html.HiddenFor(model => model.ElementAt(i).Type, new { Name = "[" + i + "].Type" });
        @Html.HiddenFor(model => model.ElementAt(i).IsDeleted, new { Name = "[" + i + "].IsDeleted" });
        @Html.HiddenFor(model => model.ElementAt(i).CreatedBy, new { Name = "[" + i + "].CreatedBy" });
        @Html.HiddenFor(model => model.ElementAt(i).CreatedDate, new { Name = "[" + i + "].CreatedDate" });
    }
<div class="wrapper wrapper-content">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>Form</h5>
            </div>
            <div class="ibox-content">
                <div class="form-group">
                    <label class="control-label col-lg-2">Dampak</label>
                </div>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th></th>
                            <th>@Html.LabelFor(model => model.FirstOrDefault().QuantitatifImpact)</th>
                            <th>@Html.LabelFor(model => model.FirstOrDefault().Probability)</th>
                            <th>@Html.LabelFor(model => model.FirstOrDefault().Impact)</th>
                            <th>@Html.LabelFor(model => model.FirstOrDefault().RPN)</th>
                        </tr>
                    </thead>
                    @for (int i = 0; i < count; i++)
                    {
                        <tr>
                            <td>@eh.GetEnumDescription((Common.Enums.ImpactTypes)Enum.Parse(typeof(Common.Enums.ImpactTypes), Model.ElementAt(i).Type))</td>
                            <td>
                                @Html.TextBoxFor(model => model.ElementAt(i).QuantitatifImpact, new { @class = "form-control", Name = "[" + i + "].QuantitatifImpact" })
                                @Html.ValidationMessageFor(model => model.ElementAt(i).QuantitatifImpact)
                            </td>
                            <td>
                                @*@Html.DropDownListFor(model => model.ElementAt(i).Probability, new SelectList(Model.ElementAt(i).ProbabilityOptions, "Value", "Text"), new { @class = "form-control", Name = "[" + i + "].Probability", Id = "[" + i + "].Probability" })*@
                                @*@Html.TextBoxFor(model => model.ElementAt(i).Probability, new { @class = "form-control", Name = "[" + i + "].Probability" })*@
                                @Html.DropDownListFor(model => model.ElementAt(i).Probability, new SelectList(Model.ElementAt(i).ProbabilityOptions, "Value", "Text", Model.ElementAt(i).Probability), new { @class = "form-control", Name = "[" + i + "].Probability" })
                            </td>
                            <td>
                                @*@Html.DropDownListFor(model => model.ElementAt(i).Impact, new SelectList(Model.ElementAt(i).ImpactOptions, "Value", "Text"), new { @class = "form-control", Name = "[" + i + "].Impact", Id = "[" + i + "].Impact" })*@
                                @*@Html.TextBoxFor(model => model.ElementAt(i).Impact, new { @class = "form-control", Name = "[" + i + "].Impact" })*@
                                @Html.DropDownListFor(model => model.ElementAt(i).Impact, new SelectList(Model.ElementAt(i).ImpactOptions, "Value", "Text",Model.ElementAt(i).Impact), new { @class = "form-control", Name = "[" + i + "].Impact" })
                            </td>
                            <td>
                                @Html.TextBoxFor(model => model.ElementAt(i).RPN, new { @class = "form-control", Name = "[" + i + "].RPN" })
                                @Html.ValidationMessageFor(model => model.ElementAt(i).RPN)
                            </td>
                        </tr>
                    }
                </table>

                <div class="form-group">
                    <div class="col-lg-offset-2 col-lg-10">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <a href="@Url.Action("RiskDetail", currentController, new { Area = "Risk", riskId = Model.FirstOrDefault().RiskId })" class="btn btn-default">Cancel</a>
                    </div>
                </div>
        </div>
    </div>
</div>
}