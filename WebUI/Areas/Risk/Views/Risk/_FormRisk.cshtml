@model WebUI.Areas.Risk.Models.Risk.RiskFormStub
@using Common.Enums;
@using WebUI.Areas.Risk.Models.Risk;
@{
    string currentController = (string)ViewContext.RouteData.Values["controller"];
    string currentAction = (string)ViewContext.RouteData.Values["action"];
    //string linkTambahRisk = "AddRisk";
    //string linkEditRisk = "EditRisk";
    //Boolean isEdit = (ViewBag.Risk != null) ? true : false;
    //string linkForm = isEdit ? linkEditRisk : linkTambahRisk;
    //RiskFormStub risk = new RiskFormStub();
    Common.Enums.EnumHelper eh = new Common.Enums.EnumHelper();
}

@using (@Html.BeginForm(currentAction, currentController, FormMethod.Post, new { @id = "formRiskAdd", @class = "form-horizontal" }))
{
    @Html.HiddenFor(model => model.RiskId);
    @Html.HiddenFor(model => model.Year);
    @Html.HiddenFor(model => model.IsDeleted);
    @Html.HiddenFor(model => model.CreatedBy);
    @Html.HiddenFor(model => model.CreatedDate);
    //if (ViewBag.Risk != null)
    //{
    //    risk = (RiskFormStub) ViewBag.Risk;
    //}
<div class="wrapper wrapper-content">
    <div class="ibox float-e-margins">
        <div class="ibox-title">
            <h5>Form</h5>
        </div>
        <div class="ibox-content">
                <div class="form-group">
                    @Html.LabelFor(model => model.RiskNumber, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.TextBoxFor(model => model.RiskNumber, new {@class = "form-control"})
                        @Html.ValidationMessageFor(model => model.RiskNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.QualitatifQuantitatifRisk, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.DropDownListFor(model => model.QualitatifQuantitatifRisk, new SelectList(Model.QualitatifQuantitatifRiskOptions, "Value", "Text"), new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ProcessBusiness, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.TextBoxFor(model => model.ProcessBusiness, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProcessBusiness, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RiskCategory, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.TextBoxFor(model => model.RiskCategory, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RiskClasification, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @*<select class="form-control valid" data-val="true" data-val-required="Klasifikasi Risiko wajib diisi." id="RiskClasification" name="RiskClasification" aria-required="true" aria-describedby="RiskClasification-error" aria-invalid="false">*@
                            @foreach (SelectListItem riskClasificationOption in Model.RiskClasificationOptions)
                            {
                                <div class="radio">
                                    <label>
                                        <span style="color: @riskClasificationOption.Value.ToLower();"><b>&#11044;</b></span>
                                        <input type="radio" name="RiskClasification" value="@riskClasificationOption.Value" @((Model.RiskClasification != null) ? (Model.RiskClasification.Equals(riskClasificationOption.Value) ? "checked=checked" : "") : "")>
                                        &nbsp;@riskClasificationOption.Text
                                    </label>
                                </div>
                                @*@Html.RadioButtonFor(model => model.RiskClasification, riskClasificationOption.Value)
                                <div class="col-lg-1" style="color: @riskClasificationOption.Value.ToLower();">&#11035;&nbsp;@riskClasificationOption.Text</div>*@
                                
                                @*<option style="color: @riskClasificationOption.Value.ToLower(); font-weight: bold;" value="@riskClasificationOption.Value">&#11044;&nbsp;@riskClasificationOption.Text</option>*@
                           }
                        @*</select>*@
                        @*@Html.DropDownListFor(model => model.RiskClasification, new SelectList(Model.RiskClasificationOptions, "Value", "Text"), new { @class = "form-control" })*@
                        @Html.ValidationMessageFor(model => model.RiskClasification, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RiskEvent, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.RiskEvent, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RiskEvent, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RiskAgent, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.RiskAgent, new { @class = "form-control"})
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.KRI, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.TextBoxFor(model => model.KRI, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Controll, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.Controll, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.QualitatifImpact, new { @class = "control-label col-lg-2" }) &nbsp;
                    <div class="col-lg-4">
                        @Html.TextAreaFor(model => model.QualitatifImpact, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-lg-offset-2 col-lg-10">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <a href="@Url.Action("", "Risk", new { Area = "Risk" })" class="btn btn-default">Cancel</a>
                    </div>
                </div>
        </div>
    </div>
</div>
}

@section Scripts{
    <script>
        $("textarea").kendoEditor({
            encoded: false,
            resizable: {
                content: true,
                toolbar: true
            }
        });
    </script>
}